<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<!DOCTYPE sqlMap
    PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
    "http://www.ibatis.com/dtd/sql-map-2.dtd">
<!--
 Copyright (c) 2007 HomeAway, Inc.
  All rights reserved.  http://www.atomserver.org

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<!--  iBatis SQL Map for EntryCategories -->
<sqlMap>


  <!-- #################### insert ############### -->
  <insert id="insertEntryCategoryLogEvent" parameterClass="entryCategory">
      INSERT INTO EntryCategoryLogEvent (EntryStoreId, CreateDate, Scheme, Term, Label)
      <dynamic>
      <isNotNull property="entryStoreId">
          VALUES (#entryStoreId#, ${db.getdate.func}, #scheme#, #term#, #label#)
      </isNotNull>
      <isNull property="entryStoreId">
          SELECT EntryStoreId, ${db.getdate.func}, #scheme#, #term#, #label#
            FROM EntryStore
           WHERE Workspace=#workspace#
             AND Collection=#collection#
             AND EntryId=#entryId#
             AND LanCode=#language#
             AND CountryCode=#country#
      </isNull>
      </dynamic>

  </insert>

  <!-- #################### select ############### -->
    <sql id="selectEntryCategoryLogEventsFragment">
        SELECT
        EntryStore.EntryStoreId AS EntryStoreId,
          Workspace, Collection, EntryId,
          EntryCategoryLogEvent.CreateDate AS CreateDate,
          Scheme, Term, Label
        FROM EntryCategoryLogEvent JOIN EntryStore ON EntryCategoryLogEvent.EntryStoreId = EntryStore.EntryStoreId
          <isNotNull property="entryStoreId">
              WHERE EntryStore.EntryStoreId = #entryStoreId#
          </isNotNull>
          <isNull property="entryStoreId">
              WHERE EntryStore.EntryStoreId = (SELECT EntryStoreId FROM EntryStore
                                                WHERE Workspace=#workspace#
                                                  AND Collection=#collection#
                                                  AND EntryId=#entryId#
                                                  AND LanCode=#language#
                                                  AND CountryCode=#country#)
          </isNull>
    </sql>

    <select id="selectEntryCategoryLogEventsBySchemeTerm"
            parameterClass="entryCategory" resultMap="entryCategoryLogEventResult" >
        <include refid="selectEntryCategoryLogEventsFragment" />
        AND Scheme=#scheme#
        AND Term=#term#
    </select>

    <select id="selectEntryCategoryLogEvents" parameterClass="entryCategory" resultMap="entryCategoryLogEventResult" >
        <include refid="selectEntryCategoryLogEventsFragment" />
    </select>

    <!-- #################### delete  ############### -->
    <delete id="deleteEntryCategoryLogEventsBySchemeTerm" parameterClass="entryCategory" >
        DELETE FROM EntryCategoryLogEvent
          <isNotNull property="entryStoreId">
              WHERE EntryStoreId = #entryStoreId#
          </isNotNull>
          <isNull property="entryStoreId">
              WHERE EntryStoreId = (SELECT EntryStoreId FROM EntryStore
                                     WHERE Workspace=#workspace#
                                       AND Collection=#collection#
                                       AND EntryId=#entryId#
                                       AND LanCode=#language#
                                       AND CountryCode=#country#)
          </isNull>
        AND Scheme=#scheme#
        AND Term=#term#
    </delete>

    <delete id="deleteEntryCategoryLogEvents" parameterClass="map" >
        DELETE FROM EntryCategoryLogEvent
              WHERE EntryStoreId = (SELECT EntryStoreId FROM EntryStore
                                     WHERE Workspace=#workspace#
                                       AND Collection=#collection#
                                       AND LanCode=#language#
                                       AND CountryCode=#country#
                                       AND EntryId=#entryId#)
    </delete>

    <!-- #################### Count  ############### -->
    <select id="countEntryCategoryLogEventsTotal" parameterClass="map" resultClass="int" >
      SELECT COUNT(*) as entrycount FROM EntryCategoryLogEvent
       WHERE EntryStoreId IN (SELECT EntryStoreId FROM EntryStore
                               WHERE Workspace=#workspace#
                               <isNotNull property="collection" >
                                  AND Collection=#collection#
                               </isNotNull>)
    </select>

    <!-- #################### Delete All ############### -->
    
    <delete id="deleteEntryCategoryLogEventsAll" parameterClass="map">
      DELETE FROM EntryCategoryLogEvent
       WHERE EntryStoreId IN (SELECT EntryStoreId FROM EntryStore
                               WHERE Workspace=#workspace#
                               <isNotNull property="collection" >
                                 AND Collection=#collection#
                               </isNotNull>)
    </delete>

    <!-- #################### Delete All ############### -->
    <delete id="deleteAllRowsFromEntryCategoryLogEvent" >
      DELETE FROM EntryCategoryLogEvent
    </delete>

</sqlMap>
