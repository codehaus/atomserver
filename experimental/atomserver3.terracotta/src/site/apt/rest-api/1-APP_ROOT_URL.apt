
                ---------------------------
                REST API - (1) APP ROOT URL
                ---------------------------
                    Bryon Jacob
                -------------------
                    2009-05-02


(1) APP ROOT URL (<<<http://my.atomserver/app>>>)

    The APP ROOT URL represents the root of the server, as far as interacting with the server
    through the Atom Publishing Protocol (APP) is concerned.  This URL is used for discovery
    (inspection of the contents of the server) as well as for installing new Services into the
    server.

    [[1]] <GET>\
        An HTTP GET against the APP ROOT URL of a running AtomServer should return an ATOM FEED
        containing the SERVICE DOCUMENTS of the services installed in the server.

        [[a]] An HTTP 200 OK response should be returned.

        [[b]] The response will have a Content-Type of "application/atom+xml"

        [[c]] The response body will be an XML 1.0 document, whose root element will be an
                {{{http://tools.ietf.org/html/rfc4287#section-4.1.1}atom:feed}} element.

        [[d]] The {{{http://tools.ietf.org/html/rfc4287#section-4.2.1}atom:author}}
                sub-element will contain the text "AtomServer v3".

        [[e]] The {{{http://tools.ietf.org/html/rfc4287#section-4.2.6}atom:id}} sub-element
                will contain the APP ROOT URL for the server as the universally unique
                identifier.

        [[f]] The {{{http://tools.ietf.org/html/rfc4287#section-4.2.14}atom:title}}
                sub-element will contain the text "AtomServer v3 Service Documents Feed".

        [[g]] The {{{http://tools.ietf.org/html/rfc4287#section-4.2.15}atom:updated}}
                sub-element will contain the latest updated date of any of the services present
                in the Service Document Feed.  If there are no services in the Feed, this will
                represent the last time the server was edited - which will either be the
                time at which the server was first brought online, if there has never been
                any Service installed on this server, or the time at which the last
                Service was deleted, if there were previously Services installed on this
                server.

        [[h]] There will be an
                {{{http://tools.ietf.org/html/rfc4287#section-4.2.7}atom:link}} sub-element
                with the <<rel>> attribute set to "self", and the <<href>> attribute set
                to the APP ROOT URL for the server.

        [[i]] There will be one
                {{{http://tools.ietf.org/html/rfc4287#section-4.1.2}atom:entry}} sub-element
                for each Service that exists within the server.

        [[j]] The {{{http://tools.ietf.org/html/rfc4287#section-4.2.6}atom:id}}
                sub-element within each entry will contain the SERVICE URL for the Service that
                the entry references.

        [[k]] The {{{http://tools.ietf.org/html/rfc4287#section-4.2.14}atom:title}} sub-element
                of each entry will contain the title of the Service that the entry references.

        [[l]] The {{{http://tools.ietf.org/html/rfc4287#section-4.2.15}atom:updated}}
                sub-element of each entry will contain the latest updated date of any of the
                workspaces within the Service that the entry references.

        [[m]] There will be an
                {{{http://tools.ietf.org/html/rfc4287#section-4.2.7}atom:link}}
                sub-element of each entry with the <<rel>> attribute set to "alternate", and the
                <<href>> attribute set to the SERVICE URL for the Service.  This will be in lieu
                of having a
                {{{http://tools.ietf.org/html/rfc4287#section-4.1.3}atom:content}}
                element, as specified by the definition of
                {{{http://tools.ietf.org/html/rfc4287#section-4.1.2}atom:entry}}.

        [[n]] Because we provide out-of-line content, we provide an
                {{{http://tools.ietf.org/html/rfc4287#section-4.2.13}atom:summary}}
                child element for each entry.  The <<type>> attribute for this element will be set
                to "text", and the contents will be "Service Document for the \{SERVICE NAME\}
                Service".

        [[o]] The {{{http://tools.ietf.org/html/rfc4287#section-4.1.2}atom:entry}}
                elements will be sorted by their
                {{{http://tools.ietf.org/html/rfc4287#section-4.2.15}atom:updated}}
                child elements, with the newest first.

    [[2]] <POST>\
            An HTTP POST against the ROOT URL should contain a SERVICE DOCUMENT as the request
            entity.

        [[a]] If the request contains no body, an HTTP 400 BAD REQUEST should be returned,
                with an appropriate error message.

        [[b]] The Server prefers a Content-Type of "application/atomsvc+xml", but will also
                accept content types of "application/atom+xml", "application/xml", or
                "text/xml".  If no Content-Type header is provided at all, the server will
                assume that the body contains XML and proceed.  If any other Content-Type is
                provided, an HTTP 415 UNSUPPORTED MEDIA TYPE should be returned.

        [[c]] If the request body is not well-formed XML, or is not a valid
                {{{http://tools.ietf.org/html/rfc5023#section-8}Service Document}}, an HTTP
                400 BAD REQUEST should be returned with an appropriate error message.

        [[d]] If the request is otherwise valid, the server should look for an {{as:name}}
                element within the SERVICE DOCUMENT and use that as the SERVICE NAME.  Valid names
                are ones that match the regular expression <<<\w\{1,32\}>>> If no {{as:name}} 
                element is present, or if the element contains an invalid name, then the Server
                will return an HTTP 400 BAD REQUEST with an appropriate error message.

        [[e]] If there is already a Service with the SERVICE NAME, an HTTP 409 CONFLICT
                response should be returned with an appropriate error message.

        [[f]] If there is no other Service with the SERVICE NAME, a new Service is added
                to the Server, registered under the SERVICE NAME, and defined by the
                SERVICE DOCUMENT that was parsed from the request body.

        [[g]] The SERVICE DOCUMENT must contain one or more
                {{{http://tools.ietf.org/html/rfc5023#section-8.3.2}app:workspace}}
                elements (this is verified by the requirement above that the document
                be a valid
                {{{http://tools.ietf.org/html/rfc5023#section-8}Service Document}}).
                Any workspaces specified are created within the service.  If there is
                any error creating any part of the service, including creating any of
                the workspaces, the entire request fails, an HTTP 400 BAD REQUEST with
                an appropriate error message is returned, and the Service is NOT
                added to the server.

        [[h]] If the service is successfully added to the server, an HTTP 201 CREATED
                is returned from the server.

        [[i]] If the service is successfully added to the server, the content of the response
                should be the
                {{{http://tools.ietf.org/html/rfc5023#section-8}Service Document}}
                for the newly created Service.

        [[j]] If the service is successfully added to the server, there should be a "Location"
                response header that indicates the URL to the newly created Service.
