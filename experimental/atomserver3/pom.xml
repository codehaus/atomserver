<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.atomserver</groupId>
    <artifactId>atomserver</artifactId>
    <packaging>jar</packaging>
    <version>3.0-SNAPSHOT</version>
    <name>atomserver</name>
    <url>http://maven.apache.org</url>

    <repositories>

        <repository>
            <id>maven2-repository.dev.java.net</id>
            <name>Java.net Repository for Maven</name>
            <url>http://download.java.net/maven/2/</url>
            <layout>default</layout>
        </repository>

        <repository>
            <id>apache-snapshots</id>
            <name>Apache Snapshot Repository</name>
            <url>http://people.apache.org/repo/m2-snapshot-repository/</url>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>

        <repository>
            <id>terracotta-repository</id>
            <url>http://www.terracotta.org/download/reflector/maven2</url>
        </repository>

        <repository>
            <id>compass-project.org</id>
            <name>Compass</name>
            <url>http://repo.compass-project.org</url>
        </repository>

    </repositories>

    <pluginRepositories>

        <pluginRepository>
            <id>terracotta-repository</id>
            <url>http://www.terracotta.org/download/reflector/maven2</url>
        </pluginRepository>

    </pluginRepositories>

    <properties>
        <spring.version>2.5.6</spring.version>
        <jersey.version>1.0.2</jersey.version>
        <terracotta.version>3.0.0</terracotta.version>
    </properties>

    <dependencies>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-server</artifactId>
            <version>${jersey.version}</version>
        </dependency>

        <dependency>
            <groupId>com.sun.jersey.contribs</groupId>
            <artifactId>jersey-spring</artifactId>
            <version>${jersey.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-core</artifactId>
            <version>2.4.0</version>
        </dependency>

        <dependency>
            <groupId>org.compass-project</groupId>
            <artifactId>compass</artifactId>
            <version>2.1.2</version>
        </dependency>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.14</version>
        </dependency>

        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.4</version>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>1.4</version>
        </dependency>

        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.3</version>
        </dependency>

        <dependency>
            <groupId>org.apache.abdera</groupId>
            <artifactId>abdera-parser</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>org.terracotta</groupId>
            <artifactId>terracotta</artifactId>
            <version>${terracotta.version}</version>
        </dependency>

        <dependency>
            <groupId>org.terracotta</groupId>
            <artifactId>tcconfig</artifactId>
            <version>${terracotta.version}</version>
        </dependency>

        <dependency>
            <groupId>org.simpleframework</groupId>
            <artifactId>simple-xml</artifactId>
            <version>2.0.2</version>
        </dependency>

        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-client</artifactId>
            <version>${jersey.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.5</version>
            <scope>test</scope>
        </dependency>

    </dependencies>


    <build>

        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>


            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.3.1</version>
                <configuration>
                    <systemProperties>
                        <property>
                            <name>org.atomserver.HOSTNAME</name>
                            <value>localhost</value>
                        </property>
                    </systemProperties>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.3</version>

                <executions>

                    <execution>
                        <id>bootjar</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>

                            <tasks>

                                <echo>creating boot jar</echo>
                                <java classname="com.tc.object.tools.BootJarTool" fork="true">
                                    <jvmarg value="-Dtc.host=localhost"/>
                                    <jvmarg value="-Dcom.tc.l1.modules.repositories=src/main/assembly/tc-modules"/>
                                    <arg value="make"/>
                                    <arg value="-f"/>
                                    <arg value="src/main/assembly/bin/tc-config.xml"/>
                                    <arg value="-o"/>
                                    <arg value="${project.build.directory}/dso-boot.jar"/>
                                    <classpath refid="maven.test.classpath"/>
                                </java>

                            </tasks>

                        </configuration>

                    </execution>

                    <execution>
                        <id>integration-test</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>

                            <tasks>

                                <parallel>
                                    <sequential>
                                        <echo>starting Terracotta server</echo>
                                        <java classname="com.tc.server.TCServerMain" fork="true">
                                            <jvmarg value="-Xms512m"/>
                                            <jvmarg value="-Xmx512m"/>
                                            <jvmarg value="-XX:NewRatio=3"/>
                                            <jvmarg value="-XX:MaxTenuringThreshold=15"/>
                                            <jvmarg value="-XX:+HeapDumpOnOutOfMemoryError"/>
                                            <jvmarg value="-Dcom.sun.management.jmxremote"/>
                                            <jvmarg value="-Dtc.config=src/main/assembly/bin/tc-config.xml"/>
                                            <jvmarg value="-Dtc.host=localhost"/>
                                            <jvmarg value="-Dtc.home=${project.build.directory}/terracotta"/>
                                            <classpath refid="maven.test.classpath"/>
                                        </java>
                                    </sequential>
                                    <sequential>
                                        <echo>starting AtomServer</echo>
                                        <java classname="org.atomserver.AtomServer" fork="true">
                                            <jvmarg value="-Xms512m"/>
                                            <jvmarg value="-Xmx512m"/>
                                            <jvmarg value="-Xbootclasspath/p:target/dso-boot.jar"/>
                                            <jvmarg value="-Dtc.config=src/main/assembly/bin/tc-config.xml"/>
                                            <jvmarg value="-Dcom.tc.l1.modules.repositories=src/main/assembly/tc-modules"/>
                                            <jvmarg value="-Dorg.atomserver.HOSTNAME=localhost"/>
                                            <jvmarg value="-Dtc.host=localhost"/>
                                            <jvmarg value="-Dtc.home=${project.build.directory}/terracotta"/>
                                            <classpath refid="maven.test.classpath"/>
                                        </java>
                                    </sequential>
                                    <sequential>
                                        <waitfor>
                                            <http url="http://localhost:8000/app"/>
                                        </waitfor>
                                        <echo>running tests</echo>

                                        <mkdir dir="${project.build.directory}/integration-tests"/>

                                        <junit printsummary="on" showoutput="on" fork="yes"
                                               failureproperty="test.failure">
                                            <formatter type="plain"/>
                                            <classpath refid="maven.test.classpath"/>
                                            <sysproperty key="atomserver.test.tc" value="true"/>
                                            <test name="org.atomserver.BasicTest"
                                                  todir="${project.build.directory}/integration-tests"/>
                                            <test name="org.atomserver.ManagementApiTest"
                                                  todir="${project.build.directory}/integration-tests"/>
                                            <test name="org.atomserver.PublishTest"
                                                  todir="${project.build.directory}/integration-tests"/>
                                            <!--
                                                <batchtest todir="${project.build.directory}">
                                                    <fileset dir="src/test/java">
                                                        <include name="**/*Test*.java"/>
                                                    </fileset>
                                                </batchtest>
                                            -->
                                        </junit>
                                        <!--stop AtomServer-->
                                        <get src="http://localhost:8042/" dest="STOP" ignoreerrors="yes"/>
                                        <!--sleep to let it die-->
                                        <sleep seconds="5"/>
                                        <!--stop TC server-->
                                        <java classname="com.tc.admin.TCStop" fork="true">
                                            <classpath refid="maven.test.classpath"/>
                                        </java>

                                        <fail if="test.failure">
                                            One or more integration tests failed, look in ${project.build.directory}/integration-tests for details.
                                        </fail>
                                    </sequential>
                                </parallel>

                            </tasks>
                        </configuration>
                    </execution>

                </executions>

                <!-- We need to pull in the ant-junit package in order to get the ANT optional
                     tasks for running JUnit tests - but it pulls in JUnit 3.8.2, so we need to
                     exclude that jar, and explicitly pull in JUnit 4.5 -->
                <dependencies>
                    <dependency>
                        <groupId>org.apache.ant</groupId>
                        <artifactId>ant-junit</artifactId>
                        <version>1.7.1</version>
                        <exclusions>
                            <exclusion>
                                <groupId>junit</groupId>
                                <artifactId>junit</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                    <dependency>
                        <groupId>junit</groupId>
                        <artifactId>junit</artifactId>
                        <version>4.5</version>
                    </dependency>
                </dependencies>

            </plugin>

            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.2-beta-3</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>attached</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <descriptors>
                        <descriptor>
                            src/main/assembly/install.xml
                        </descriptor>
                    </descriptors>
                    <outputDirectory>${project.build.directory}/install</outputDirectory>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <configuration>
                    <mainClass>org.atomserver.AtomServer</mainClass>
                </configuration>
            </plugin>

        </plugins>

    </build>

</project>
