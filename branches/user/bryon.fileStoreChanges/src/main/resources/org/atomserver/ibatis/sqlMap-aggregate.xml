<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">
<!--
 Copyright (c) 2007 HomeAway, Inc.
  All rights reserved.  http://www.atomserver.org

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<sqlMap>

    <sql id="SELECT_modifiedAggregateEntryIds">
        SELECT
        <include refid="paginationPrefix"/>
               cat.term as EntryId
          FROM EntryStore entry JOIN EntryCategory cat
            ON entry.EntryStoreId = cat.EntryStoreId
        <isNotNull property="categoryQuerySql">
            INNER JOIN ( $categoryQuerySql$ ) matchedEntry
               ON cat.term = matchedEntry.EntryId
        </isNotNull>
         WHERE cat.scheme = #collection#
        <!-- if a localized aggregate feed has been requested, we filter the results to include
             only aggregate entries that have at least one component in the requested locale. -->
        <isNotNull property="language">
            AND cat.term IN (
                SELECT localCat.term
                  FROM EntryStore localEntry JOIN EntryCategory localCat
                    ON localCat.scheme = #collection#
                   AND localEntry.EntryStoreId = localCat.entryStoreId
                   AND localEntry.LanCode = #language#
                <isNotNull property="country">
                   AND (localEntry.CountryCode = #country#)
                </isNotNull>
                <isNotNull property="joinWorkspaces">
                    AND localEntry.Workspace IN 
                    <iterate property="joinWorkspaces" open="(" close=")" conjunction=",">#joinWorkspaces[]#</iterate>
                </isNotNull>
            )
        </isNotNull>
        <isNotNull property="joinWorkspaces">
            AND entry.Workspace IN
            <iterate property="joinWorkspaces" open="(" close=")" conjunction=",">#joinWorkspaces[]#</iterate>
        </isNotNull>

      GROUP BY cat.term
        HAVING MAX(UpdateTimestamp) > #lastModifiedSeqNum#
      ORDER BY MAX(UpdateTimestamp)
        <include refid="paginationSuffix"/>
    </sql>

    <select id="countModifiedAggregateEntries" parameterClass="map" resultClass="int">
        SELECT COUNT(EntryId) AS entryCount
          FROM (<include refid="SELECT_modifiedAggregateEntryIds"/>)
    </select>

    <select id="selectAggregateEntriesByPage" parameterClass="map" resultMap="entryResult">
        <include refid="SELECT_EntryStore_JOIN_EntryCategory"/>
        INNER JOIN EntryCategory joincat
           ON entry.EntryStoreId = joincat.EntryStoreId
          AND joincat.scheme = #collection#
          AND joincat.term IN (
                <include refid="SELECT_modifiedAggregateEntryIds"/>
              )
          AND (
        <!-- we only want to include categories that are either (a) outside of the join scheme, or
             (b) are matches to the SELECT_modifiedAggregateEntryIds query.  We are already joining
             in that query as joincat, so we can just include the rows where joincat and cat are
             referring to the same EntryCategory -->
                cat.scheme != #collection# OR
                cat.term = joincat.term
              )
        <!-- if this is a localized feed, we want to pull in components that are in the proper
             locale, as well as things that are not localized at all -->
        <isNotNull property="country">
           AND (entry.CountryCode = #country# OR entry.CountryCode = '**')
        </isNotNull>
        <isNotNull property="language">
           AND (entry.LanCode = #language# OR entry.LanCode = '**')
        </isNotNull>
        <isNotNull property="joinWorkspaces">
            AND entry.Workspace IN 
            <iterate property="joinWorkspaces" open="(" close=")" conjunction=",">#joinWorkspaces[]#</iterate>
        </isNotNull>
        ORDER BY UpdateTimestamp, Scheme, Term
    </select>

    <select id="selectAggregateEntry" parameterClass="map" resultMap="entryResult">
        <include refid="SELECT_EntryStore_JOIN_EntryCategory"/>
        INNER JOIN EntryCategory joincat
           ON entry.EntryStoreId = joincat.EntryStoreId
          AND joincat.scheme = #collection#
          AND joincat.term = #entryId#
       <!-- if this is a localized entry, we want to pull in things that are in the proper locale,
            as well as things that are not localized at all -->
       <isNotNull property="country">
          AND (entry.CountryCode = #country# OR entry.CountryCode = '**')
       </isNotNull>
       <isNotNull property="language">
          AND (entry.LanCode = #language# OR entry.LanCode = '**')
       </isNotNull>
       <!-- but, in the case of a localized entry, we only want to return an entry if there is at
            least one localized component in the propert locale - this clause executes that filter
            and causes an empty result set in that case -->
       <isNotNull property="language">
          AND joincat.term IN (SELECT c.term
                                 FROM EntryCategory c JOIN EntryStore e
                                   ON c.EntryStoreId = e.EntryStoreId
                                WHERE c.scheme = #collection#
                                  AND c.term = #entryId#
                                  AND e.LanCode = #language#
           <isNotNull property="country">
                                  AND e.CountryCode = #country#
           </isNotNull>
                                GROUP BY c.term
           )
       </isNotNull>
        <isNotNull property="joinWorkspaces">
            AND entry.Workspace IN
            <iterate property="joinWorkspaces" open="(" close=")" conjunction=",">#joinWorkspaces[]#</iterate>
        </isNotNull>        
    </select>

</sqlMap>

