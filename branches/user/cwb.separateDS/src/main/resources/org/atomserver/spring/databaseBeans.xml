<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright (c) 2007 HomeAway, Inc.
  All rights reserved.  http://www.atomserver.org

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

    <!-- +++++++++++++++++++++++++++++++++++ -->
    <!--           Data Sources              -->
    <!-- +++++++++++++++++++++++++++++++++++ -->

    <!-- NOTE: defaultAutoCommit must remain true here (the default)
               Otherwise, the Transaction (withing Spring's TransactionManager) will NOT commit -->

    <!-- the READ datasource -->
    <bean id="org.atomserver-read-dataSource"
          class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close"
          lazy-init="true"
          depends-on="org.atomserver-propertyConfigurer">

        <property name="driverClassName" value="${db.driver}"/>
        <property name="url" value="${db.url}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
        <property name="maxActive" value="${db.poolsize.max}"/>
        <property name="maxWait" value="10000"/>
    </bean>

    <!-- the WRITE datasource --> 
    <bean id="org.atomserver-dataSource"
          class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close"
          lazy-init="true"
          depends-on="org.atomserver-propertyConfigurer">

        <property name="driverClassName" value="${db.driver}"/>
        <property name="url" value="${db.url}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
        <property name="maxActive" value="${db.poolsize.max}"/>
        <property name="maxWait" value="10000"/>
    </bean>

    <!-- +++++++++++++++++++++++++++++++++++ -->
    <!-- the iBatis SQLMap client -->
    <!-- +++++++++++++++++++++++++++++++++++ -->
    <bean id="org.atomserver-sqlMapClient"
          class="org.springframework.orm.ibatis.SqlMapClientFactoryBean"
          depends-on="org.atomserver-propertyConfigurer">
        <property name="configLocation" value="classpath:org/atomserver/ibatis/sqlMapConfig-${db.type}.xml"/>
        <property name="sqlMapClientProperties">
            <props>
                <prop key="db.getdate.func">${db.getdate.func}</prop>
                <prop key="db.timeout.sql.stmts">${db.timeout.sql.stmts}</prop>
                <prop key="db.timeout.txn.put">${db.timeout.txn.put}</prop>
                <prop key="db.timeout.applock">${db.timeout.applock}</prop>
            </props>
        </property>
    </bean>

    <!-- +++++++++++++++++++++++++++++++++++ -->
    <!--               entriesDAO            -->
    <!-- +++++++++++++++++++++++++++++++++++ -->

    <bean id="org.atomserver-base-entriesDAO"
          class="org.atomserver.core.dbstore.dao.impl.BaseEntriesDAOiBatisImpl"
          depends-on="org.atomserver-propertyConfigurer"
          abstract="true" >
        <property name="dataSource" ref="org.atomserver-read-dataSource"/>
        <property name="sqlMapClient" ref="org.atomserver-sqlMapClient"/>
        <property name="databaseType" value="${db.type}"/>
        <property name="contentDAO" ref="org.atomserver-contentDAO"/>
        <property name="categoriesDAO" ref="org.atomserver-write-categoriesDAO" />
        <property name="categoryLogEventsDAO" ref="org.atomserver-write-categoryLogEventsDAO" />
        <property name="latencySeconds" value="${db.latency.seconds}"/>
    </bean>

    <bean id="org.atomserver-write-entriesDAO"
          class="org.atomserver.core.dbstore.dao.impl.WriteReadEntriesDAOiBatisImpl"
          parent="org.atomserver-base-entriesDAO">
        <property name="dataSource" ref="org.atomserver-dataSource"/>
    </bean>
    <bean id="org.atomserver-read-entriesDAO"
          class="org.atomserver.core.dbstore.dao.impl.ReadEntriesDAOiBatisImpl"
          parent="org.atomserver-base-entriesDAO">
        <property name="dataSource" ref="org.atomserver-read-dataSource"/>
        <property name="useWorkspaceCollectionCache" value="${db.cache.workspaceCollections}" />
    </bean>
    <bean id="org.atomserver-aggregate-entriesDAO"
          class="org.atomserver.core.dbstore.dao.impl.AggregateEntriesDAOiBatisImpl"
          parent="org.atomserver-base-entriesDAO">
        <property name="dataSource" ref="org.atomserver-read-dataSource"/>
    </bean>

    <bean id="org.atomserver-entriesDAO"
          class="org.atomserver.core.dbstore.dao.impl.EntriesDAOiBatisImpl"
          depends-on="org.atomserver-propertyConfigurer">
        <property name="readEntriesDAO" ref="org.atomserver-read-entriesDAO" />
        <property name="writeEntriesDAO" ref="org.atomserver-write-entriesDAO" />
        <property name="aggregateEntriesDAO" ref="org.atomserver-aggregate-entriesDAO" />
    </bean>


    <!-- +++++++++++++++++++++++++++++++++++ -->
    <!--               contentDAO            -->
    <!-- +++++++++++++++++++++++++++++++++++ -->

    <bean id="org.atomserver-contentDAO"
          class="org.atomserver.core.dbstore.dao.impl.ContentDAOiBatisImpl"
          depends-on="org.atomserver-propertyConfigurer">
        <property name="dataSource" ref="org.atomserver-dataSource"/>
        <property name="sqlMapClient" ref="org.atomserver-sqlMapClient"/>
        <property name="databaseType" value="${db.type}"/>
    </bean>

    <!-- +++++++++++++++++++++++++++++++++++ -->
    <!--        categoriesDAO           -->
    <!-- +++++++++++++++++++++++++++++++++++ -->
    <bean id="org.atomserver-base-categoriesDAO"
          class="org.atomserver.core.dbstore.dao.impl.ReadCategoriesDAOiBatisImpl"
          depends-on="org.atomserver-propertyConfigurer"
          abstract="true" >
        <property name="sqlMapClient" ref="org.atomserver-sqlMapClient"/>
        <property name="databaseType" value="${db.type}"/>
    </bean>
    <bean id="org.atomserver-read-categoriesDAO"
          class="org.atomserver.core.dbstore.dao.impl.ReadCategoriesDAOiBatisImpl"
          parent="org.atomserver-base-categoriesDAO">
        <property name="dataSource" ref="org.atomserver-read-dataSource"/>
    </bean>
    <bean id="org.atomserver-write-categoriesDAO"
          class="org.atomserver.core.dbstore.dao.impl.WriteReadCategoriesDAOiBatisImpl"
          parent="org.atomserver-base-categoriesDAO">
        <property name="dataSource" ref="org.atomserver-dataSource"/>
    </bean>

    <bean id="org.atomserver-entryCategoriesDAO"
          class="org.atomserver.core.dbstore.dao.impl.CategoriesDAOiBatisImpl"
          depends-on="org.atomserver-propertyConfigurer">
        <property name="readCategoriesDAO" ref="org.atomserver-read-categoriesDAO" />
        <property name="writeReadCategoriesDAO" ref="org.atomserver-write-categoriesDAO" />
    </bean>

    <!-- +++++++++++++++++++++++++++++++++++ -->
    <!--       categoryLogEventsDAO      -->
    <!-- +++++++++++++++++++++++++++++++++++ -->
    <bean id="org.atomserver-base-categoryLogEventsDAO"
          class="org.atomserver.core.dbstore.dao.impl.ReadCategoryLogEventsDAOiBatisImpl"
          depends-on="org.atomserver-propertyConfigurer"
          abstract="true" >
        <property name="sqlMapClient" ref="org.atomserver-sqlMapClient"/>
        <property name="databaseType" value="${db.type}"/>
    </bean>
    <bean id="org.atomserver-read-categoryLogEventsDAO"
          class="org.atomserver.core.dbstore.dao.impl.ReadCategoryLogEventsDAOiBatisImpl"
          parent="org.atomserver-base-categoryLogEventsDAO">
        <property name="dataSource" ref="org.atomserver-dataSource"/>
   </bean>
    <bean id="org.atomserver-write-categoryLogEventsDAO"
          class="org.atomserver.core.dbstore.dao.impl.WriteReadCategoryLogEventsDAOiBatisImpl"
          parent="org.atomserver-base-categoryLogEventsDAO">
        <property name="dataSource" ref="org.atomserver-dataSource"/>
    </bean>
    <bean id="org.atomserver-entryCategoryLogEventDAO"
          class="org.atomserver.core.dbstore.dao.impl.CategoryLogEventsDAOiBatisImpl"
          depends-on="org.atomserver-propertyConfigurer">
        <property name="readEntryCategoryLogEventDAO" ref="org.atomserver-read-categoryLogEventsDAO" />
        <property name="writeReadEntryCategoryLogEventDAO" ref="org.atomserver-write-categoryLogEventsDAO" />
    </bean>


    <!-- +++++++++++++++++++++++++++++++++++ -->
    <!--       statsMonitorDAO               -->
    <!-- +++++++++++++++++++++++++++++++++++ -->

    <bean id="org.atomserver-statsMonitorDAO"
          class="org.atomserver.core.dbstore.dao.impl.StatisticsMonitorDAOiBatisImpl"
          depends-on="org.atomserver-propertyConfigurer">
        <property name="dataSource" ref="org.atomserver-read-dataSource"/>
        <property name="sqlMapClient" ref="org.atomserver-sqlMapClient"/>
        <property name="databaseType" value="${db.type}"/>
    </bean>

    <bean class="org.atomserver.utils.spring.StartupConstraints"
          depends-on="org.atomserver-entriesDAO">
        <property name="constraints">
            <value>
                <![CDATA[
                entriesDAO = context.getBean("org.atomserver-entriesDAO");
                if (entriesDAO.latencySeconds > 0 &&
                    entriesDAO.latencySeconds <= ${db.timeout.txn.put}) {
                    reject("ERROR: latencySeconds set to " + entriesDAO.latencySeconds +
                           ", but transaction timeout is ${db.timeout.txn.put}.");
                }
                ]]>
            </value>
        </property>
    </bean>

    <bean id="org.atomserver-sizeLimit"
          class="org.atomserver.core.dbstore.utils.SizeLimit"
          depends-on="org.atomserver-propertyConfigurer">
         <property name="dataSource" ref="org.atomserver-read-dataSource"/>
    </bean>

</beans>
