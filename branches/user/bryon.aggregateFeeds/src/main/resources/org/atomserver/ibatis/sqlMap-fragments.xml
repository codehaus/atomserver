<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<!DOCTYPE sqlMap
        PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
        "http://www.ibatis.com/dtd/sql-map-2.dtd">
<!--
 Copyright (c) 2007 HomeAway, Inc.
  All rights reserved.  http://www.atomserver.org

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<!--  iBatis SQL Map for Entries -->
<sqlMap>

    <!-- #################### common definitions ############### -->
    <typeAlias type="org.atomserver.core.EntryMetaData" alias="entryMetaData"/>
    <typeAlias type="org.atomserver.core.EntryCategory" alias="entryCategory"/>
    <typeAlias type="org.atomserver.EntryDescriptor" alias="entryDescriptor"/>
    <typeAlias type="org.atomserver.core.EntryCategoryLogEvent" alias="entryCategoryLogEvent"/>


    <resultMap class="entryMetaData" id="entryResultSansCategories">
        <result property="entryStoreId" column="EntryStoreId"/>
        <result property="workspace" column="Workspace"/>
        <result property="collection" column="Collection"/>
        <result property="language" column="LanCode"/>
        <result property="country" column="CountryCode"/>
        <result property="entryId" column="EntryId"/>
        <result property="lastModifiedDate" column="UpdateDate" javaType="Date" jdbcType="DATETIME"/>
        <result property="publishedDate" column="CreateDate" javaType="Date" jdbcType="DATETIME"/>
        <result property="lastModifiedSeqNum" column="UpdateTimestamp"/>
        <result property="deleted" column="DeleteFlag"/>
        <result property="revision" column="RevisionNum"/>
    </resultMap>

    <resultMap class="entryMetaData" id="entryResult" groupBy="workspace,collection,language,country,entryId">
        <result property="entryStoreId" column="EntryStoreId"/>
        <result property="workspace" column="Workspace"/>
        <result property="collection" column="Collection"/>
        <result property="language" column="LanCode"/>
        <result property="country" column="CountryCode"/>
        <result property="entryId" column="EntryId"/>
        <result property="lastModifiedDate" column="UpdateDate" javaType="Date" jdbcType="DATETIME"/>
        <result property="publishedDate" column="CreateDate" javaType="Date" jdbcType="DATETIME"/>
        <result property="lastModifiedSeqNum" column="UpdateTimestamp"/>
        <result property="deleted" column="DeleteFlag"/>
        <result property="revision" column="RevisionNum"/>
        <result property="categories" resultMap="entryCategoryResult"/>
    </resultMap>

    <resultMap class="entryCategory" id="entryCategoryResult">
        <result property="entryStoreId" column="EntryStoreId"/>
        <result property="workspace" column="Workspace"/>
        <result property="collection" column="Collection"/>
        <result property="entryId" column="EntryId"/>
        <result property="scheme" column="Scheme"/>
        <result property="term" column="Term"/>
        <result property="label" column="Label"/>
    </resultMap>

    <resultMap class="entryCategoryLogEvent" id="entryCategoryLogEventResult">
        <result property="entryStoreId" column="EntryStoreId"/>
        <result property="workspace" column="Workspace"/>
        <result property="collection" column="Collection"/>
        <result property="entryId" column="EntryId"/>
        <result property="scheme" column="Scheme"/>
        <result property="term" column="Term"/>
        <result property="label" column="Label"/>
        <result property="createDate" column="CreateDate"/>
    </resultMap>

    <sql id="selectEntryStoreIdByPage_fragment">
        EntryStoreId, UpdateTimestamp
        FROM EntryStore
        WHERE UpdateDate >= #lastModifiedDate#
        AND UpdateTimestamp > #lastModifiedSeqNum#
        AND Workspace = #workspace#
        <isNotNull property="collection">
            AND Collection=#collection#
        </isNotNull>
    </sql>

    <sql id="selectEntryStoreIdByPageAndLocale_fragment">
        <include refid="selectEntryStoreIdByPage_fragment"/>
        AND LanCode = #language#
        AND CountryCode = #country#
    </sql>


    <!-- #################### reusable SQL fragments ############### -->
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- NOTE: parameterClass="map" resultMap="entryResult"
NOTE: requires a SELECT to start (omitted for SELECT TOP...) -->
    <sql id="selectEntriesByPageAndLocaleSansCategories_fragment">
        EntryStoreId, Workspace, Collection, LanCode, CountryCode, EntryId, UpdateDate, CreateDate,
        <include refid="timestampColumn"/>,
        DeleteFlag, RevisionNum
        FROM EntryStore
        WHERE UpdateDate >= #lastModifiedDate#
        AND UpdateTimestamp > #lastModifiedSeqNum#
        AND Workspace = #workspace#
        <isNotNull property="collection">
            AND Collection=#collection#
        </isNotNull>
        AND LanCode = #language#
        AND CountryCode = #country#
    </sql>

    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- NOTE: parameterClass="map" resultMap="entryResult"
NOTE: requires a SELECT to start (omitted for SELECT TOP...) -->
    <sql id="selectEntriesByPageSansCategories_fragment">
        EntryStoreId, Workspace, Collection, LanCode, CountryCode, EntryId, UpdateDate, CreateDate,
        <include refid="timestampColumn"/>,
        DeleteFlag, RevisionNum
        FROM EntryStore
        WHERE UpdateDate >= #lastModifiedDate#
        AND UpdateTimestamp > #lastModifiedSeqNum#
        AND Workspace = #workspace#
        <isNotNull property="collection">
            AND Collection=#collection#
        </isNotNull>
    </sql>

    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- NOTE: parameterClass="map" resultMap="entryResult"
NOTE: requires a SELECT to start (omitted for SELECT TOP...) -->
    <sql id="selectEntriesByPageAndLocale_fragment">
        entry.EntryStoreId AS EntryStoreId,
        entry.Workspace AS Workspace,
        entry.Collection AS Collection,
        entry.LanCode AS LanCode,
        entry.CountryCode AS CountryCode,
        entry.EntryId AS EntryId,
        entry.UpdateDate AS UpdateDate,
        entry.CreateDate AS CreateDate,
        <include refid="timestampColumn"/>,
        entry.DeleteFlag AS DeleteFlag,
        entry.RevisionNum AS RevisionNum,
        cat.Scheme AS Scheme,
        cat.Term AS Term,
        cat.Label AS Label
        FROM EntryStore entry
        LEFT OUTER JOIN EntryCategory cat
        ON ( cat.Workspace = entry.Workspace
        AND cat.Collection = entry.Collection
        AND cat.EntryId = entry.EntryId)
        WHERE UpdateDate >= #lastModifiedDate#
        AND UpdateTimestamp > #lastModifiedSeqNum#
        AND entry.Workspace = #workspace#
        <isNotNull property="collection">
            AND entry.Collection=#collection#
        </isNotNull>
        AND LanCode = #language#
        AND CountryCode = #country#
    </sql>

    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- NOTE: parameterClass="map" resultMap="entryResult"
NOTE: requires a SELECT to start (omitted for SELECT TOP...) -->
    <sql id="selectEntriesByPage_fragment">
        entry.EntryStoreId AS EntryStoreId,
        entry.Workspace AS Workspace,
        entry.Collection AS Collection,
        entry.LanCode AS LanCode,
        entry.CountryCode AS CountryCode,
        entry.EntryId AS EntryId,
        entry.UpdateDate AS UpdateDate,
        entry.CreateDate AS CreateDate,
        <include refid="timestampColumn"/>,
        entry.DeleteFlag AS DeleteFlag,
        entry.RevisionNum AS RevisionNum,
        cat.Scheme AS Scheme,
        cat.Term AS Term,
        cat.Label AS Label
        FROM EntryStore entry
        LEFT OUTER JOIN EntryCategory cat
        ON ( cat.Workspace = entry.Workspace
        AND cat.Collection = entry.Collection
        AND cat.EntryId = entry.EntryId)
        WHERE UpdateDate >= #lastModifiedDate#
        AND UpdateTimestamp > #lastModifiedSeqNum#
        AND entry.Workspace = #workspace#
        <isNotNull property="collection">
            AND entry.Collection=#collection#
        </isNotNull>
    </sql>

    <sql id="paginationPrefix">
        <dynamic>
            <isEqual property="dbType" compareValue="sqlserver">
                <isNotEqual property="pageSize" compareValue="0">
                    TOP $pageSize$
                </isNotEqual>
            </isEqual>
        </dynamic>
    </sql>

    <sql id="paginationSuffix">
        <dynamic>
            <isNotEqual property="dbType" compareValue="sqlserver">
                <isNotEqual property="pageSize" compareValue="0">
                    LIMIT #pageSize#
                </isNotEqual>
            </isNotEqual>
        </dynamic>
    </sql>

    <sql id="timestampColumn">
        <isEqual property="dbType" compareValue="sqlserver">
            CONVERT(BIGINT, UpdateTimestamp) AS
        </isEqual>
        UpdateTimestamp
    </sql>

    <sql id="updateLock_Table">
        <isEqual property="dbType" compareValue="sqlserver">
            (UPDLOCK)
        </isEqual>
    </sql>

    <sql id="updateLock_Query">
        <isEqual property="dbType" compareValue="mysql">
            FOR UPDATE
        </isEqual>
    </sql>

</sqlMap>

