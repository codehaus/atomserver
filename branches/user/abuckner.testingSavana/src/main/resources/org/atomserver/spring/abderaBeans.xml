<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright (c) 2007 HomeAway, Inc.
  All rights reserved.  http://www.atomserver.org

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:a="http://abdera.apache.org"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
                           http://www.springframework.org/schema/util
                           http://www.springframework.org/schema/util/spring-util-2.0.xsd
                           http://abdera.apache.org
                           http://abdera.apache.org/schemas/abdera-spring.xsd">

    <bean id="org.atomserver-uriHandler" class="org.atomserver.uri.URIHandler">
        <property name="rootPath" value="${atomserver.servlet.context}"/>
        <property name="contextPath" value="v1"/>
        <property name="sizeLimit"  ref="org.atomserver-sizeLimit" /> 
    </bean>

    <bean id="org.atomserver-uriHandlerV2" class="org.atomserver.uri.URIHandler">
        <property name="rootPath" value="${atomserver.servlet.context}"/>
        <property name="contextPath" value="v2"/>
       <property name="sizeLimit"  ref="org.atomserver-sizeLimit" /> 
    </bean>

    <a:serviceContext>
        <!-- the default name for this beans is
             org.apache.abdera.protocol.server.ServiceContext -->
        <a:provider>
            <ref bean="org.atomserver-atomServer"/>
        </a:provider>

        <a:targetResolver>
            <ref bean="org.atomserver-uriHandler"/>
        </a:targetResolver>
    </a:serviceContext>

    <a:serviceContext id="org.atomserver-serviceContext.v2">
        <!-- the default name for this beans is
             org.apache.abdera.protocol.server.ServiceContext -->
        <a:provider>
            <ref bean="org.atomserver-atomServerV2"/>
        </a:provider>

        <a:targetResolver>
            <ref bean="org.atomserver-uriHandlerV2"/>
        </a:targetResolver>
    </a:serviceContext>

    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <bean id="org.atomserver-taskExecutor"
          class="org.atomserver.utils.thread.ManagedThreadPoolTaskExecutor"
          depends-on="org.atomserver-propertyConfigurer" 
          lazy-init="true" >
      <property name="corePoolSize" value="${atomserver.poolsize.core}" />
      <property name="maxPoolSize" value="${atomserver.poolsize.max}" />
      <property name="queueCapacity" value="${atomserver.queue.capacity}" />
      <property name="keepAliveSeconds" value="${atomserver.keepAlive.secs}" />
    </bean>

    <bean name="org.atomserver-normalAtomServer"
          class="org.atomserver.AtomServer"
          depends-on="org.atomserver-propertyConfigurer"
          lazy-init="true" >
        <property name="service" ref="org.atomserver-atomService"/>
        <property name="errorLog" ref="org.atomserver-errorLog"/>
    </bean>

    <bean name="org.atomserver-throttledAtomServer"
          class="org.atomserver.ThrottledAtomServer"
          depends-on="org.atomserver-propertyConfigurer"
          lazy-init="true" >
        <property name="atomServer" ref="org.atomserver-normalAtomServer"/>

        <property name="threadPool" ref="org.atomserver-taskExecutor"/>
        <property name="taskTimeout" value="${atomserver.timeout.task.ms}"/>
    </bean>

    <bean name="org.atomserver-normalAtomServerV2"
          class="org.atomserver.AtomServerV2"
          depends-on="org.atomserver-propertyConfigurer"
          lazy-init="true" >
        <property name="service" ref="org.atomserver-atomServiceV2"/>
        <property name="errorLog" ref="org.atomserver-errorLog"/>
    </bean>

    <bean name="org.atomserver-throttledAtomServerV2"
          class="org.atomserver.ThrottledAtomServer"
          depends-on="org.atomserver-propertyConfigurer"
          lazy-init="true" >
        <property name="atomServer" ref="org.atomserver-normalAtomServerV2"/>

        <property name="threadPool" ref="org.atomserver-taskExecutor"/>
        <property name="taskTimeout" value="${atomserver.timeout.task.ms}"/>
    </bean>


    <bean name="org.atomserver-atomServer"
          class="org.atomserver.DelegatingProvider" >
        <property name="providers">
            <map>
                <entry key="throttled" value-ref="org.atomserver-throttledAtomServer" />
                <entry key="normal" value-ref="org.atomserver-normalAtomServer" />
            </map>
        </property>
        <property name="currentProviderName" value="${atomserver.type}" />
    </bean>

    <bean name="org.atomserver-atomServerV2"
          class="org.atomserver.DelegatingProvider" >
        <property name="providers">
            <map>
                <entry key="throttled" value-ref="org.atomserver-throttledAtomServerV2" />
                <entry key="normal" value-ref="org.atomserver-normalAtomServerV2" />
            </map>
        </property>
        <property name="currentProviderName" value="${atomserver.type}" />
    </bean>

    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <bean id="org.atomserver-simpleXMLContentValidator"
          class="org.atomserver.core.validators.SimpleXMLContentValidator"/>

    <bean id="org.atomserver-entryIdGenerator"
          class="org.atomserver.core.idgenerators.UUIDEntryIdGenerator"/>

    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <bean id="org.atomserver-isAliveHandler"
          class="org.atomserver.core.dbstore.AtomServerIsAliveHandler"
          depends-on="org.atomserver-propertyConfigurer" >
        <property name="atomServerDAO" ref="org.atomserver-entriesDAO"/>
        <property name="contentStorage" ref="org.atomserver-contentStorage"/>
        <property name="initialAliveState" value="${atomserver.initial.alive.state}" />
    </bean>

    <import resource="classpath:org/atomserver/spring/workspaceBeans.xml" />

    <util:map id="org.atomserver-virtualWorkspaceHandlers">
         <entry key="CATEGORIES" value-ref="org.atomserver-entryCategoriesHandler" />
    </util:map>

    <bean id="org.atomserver-atomService"
          class="org.atomserver.core.dbstore.DBBasedAtomService"
          init-method="initialize"
          depends-on="org.atomserver-propertyConfigurer" >

        <property name="entriesDAO" ref="org.atomserver-entriesDAO"/>

        <property name="virtualWorkspaceHandlers" ref="org.atomserver-virtualWorkspaceHandlers"/>

        <property name="serviceContext" ref="org.apache.abdera.protocol.server.ServiceContext"/>
        
        <property name="transactionTemplate">
            <bean class="org.springframework.transaction.support.TransactionTemplate">
              <property name="timeout" value="${db.timeout.txn.put}"/>
              <property name="transactionManager">
                  <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" >
                    <property name="dataSource" ref="org.atomserver-dataSource"/>
                  </bean>
              </property>
            </bean>
        </property>

        <property name="uriHandler" ref="org.atomserver-uriHandler"/>

        <property name="workspaces" ref="org.atomserver-workspaces"/>

        <property name="entriesMonitor" ref="org.atomserver-entriesMonitor" />
    </bean>

    <bean id="org.atomserver-atomServiceV2"
          class="org.atomserver.core.dbstore.DBBasedAtomService"
          init-method="initialize"
          depends-on="org.atomserver-propertyConfigurer" >

        <property name="entriesDAO" ref="org.atomserver-entriesDAO"/>

        <property name="virtualWorkspaceHandlers" ref="org.atomserver-virtualWorkspaceHandlers"/>

        <property name="serviceContext" ref="org.atomserver-serviceContext.v2"/>

        <property name="transactionTemplate">
            <bean class="org.springframework.transaction.support.TransactionTemplate">
              <property name="timeout" value="${db.timeout.txn.put}"/>
              <property name="transactionManager">
                  <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" >
                    <property name="dataSource" ref="org.atomserver-dataSource"/>
                  </bean>
              </property>
            </bean>
        </property>

        <property name="uriHandler" ref="org.atomserver-uriHandlerV2"/>

        <property name="workspaces" ref="org.atomserver-workspaces"/>

        <property name="entriesMonitor" ref="org.atomserver-entriesMonitor" />
    </bean>

    <bean id="org.atomserver-blockingFilter"
          class="org.atomserver.server.servlet.BlockingFilterSettings">
    </bean>

    <!-- Delegated servlet filter -->
    <bean id="BlockingFilter"
          class="org.atomserver.server.servlet.BlockingFilter">
      <constructor-arg index="0" ref="org.atomserver-blockingFilter"/>
    </bean>

    <bean id="org.atomserver-statsMonitor"
          class="org.atomserver.monitor.StatisticsMonitor"
          lazy-init="true">
        <property name="statsMonitorDAO" ref="org.atomserver-statsMonitorDAO" />
    </bean>

    <bean id="org.atomserver-entriesMonitor" class="org.atomserver.monitor.EntriesMonitor">
    </bean>
</beans>
